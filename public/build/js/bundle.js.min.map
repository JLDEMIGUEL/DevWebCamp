{"version":3,"sources":["horas,.js","ponentes.js","tags.js"],"names":["horas","document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","value","target","name","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasOcupadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponentePrevio","ponente","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas')\r\n    let busqueda = {\r\n        categoria_id : '',\r\n        dia : ''\r\n    }\r\n    if(horas){\r\n\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]')\r\n        const dias = document.querySelectorAll('[name=\"dia\"]')\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]')\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]')\r\n\r\n        categoria.addEventListener('change', terminoBusqueda)\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n        function terminoBusqueda(e){\r\n            inputHiddenDia.value = e.target.value\r\n            busqueda[e.target.name]=e.target.value\r\n\r\n            //Reiniciar campos ocultos\r\n            inputHiddenHora.value=''\r\n            inputHiddenDia.value=''\r\n\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n    \r\n            if(Object.values(busqueda).includes('')){\r\n                return;\r\n            }\r\n    \r\n            buscarEventos();\r\n        }\r\n        async function buscarEventos(){\r\n            const {dia, categoria_id} = busqueda\r\n            const url = `/api/eventos-horario?categoria_id=${categoria_id}&dia_id=${dia}`\r\n            const resultado = await fetch(url)\r\n            const eventos = await resultado.json()\r\n    \r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n    \r\n        function obtenerHorasDisponibles(eventos){\r\n    \r\n            //reiniciar horas\r\n            const listadoHoras = document.querySelectorAll('#horas li')\r\n            listadoHoras.forEach( li => li.classList.add('horas__hora--deshabilitada'))\r\n    \r\n    \r\n            const horasOcupadas = eventos.map(evento => evento.hora_id)\r\n            const listadoHorasArray = Array.from(listadoHoras)\r\n            const resultado = listadoHorasArray.filter(li => !horasOcupadas.includes(li.dataset.horaId))\r\n    \r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\r\n    \r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)')\r\n    \r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora))\r\n        }\r\n    \r\n        function seleccionarHora(e){\r\n    \r\n            //Deshabilitar hora anterior\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia){\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n    \r\n            e.target.classList.add('horas__hora--seleccionada')\r\n            inputHiddenHora.value =  e.target.dataset.horaId\r\n            //LLenar dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n    }\r\n})();","(function(){\r\n\r\n    const ponentesInput = document.querySelector('#ponentes')\r\n\r\n    if(ponentesInput){\r\n        let ponentes = []\r\n        let ponentesFiltrados = []\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes')\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\r\n\r\n        obtenerPonentes()\r\n\r\n        ponentesInput.addEventListener('input', bucarPonentes)\r\n\r\n        async function obtenerPonentes(){\r\n            \r\n            const url = `/api/ponentes`\r\n            const respuesta = await fetch(url)\r\n            const resultado = await respuesta.json()\r\n\r\n            formatearPonentes(resultado)\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []){\r\n\r\n            ponentes = arrayPonentes.map(ponente =>{\r\n                return{\r\n                    nombre: ponente.nombre.trim() +\" \"+ ponente.apellido.trim(),\r\n                    id: ponente.id\r\n                }\r\n            })\r\n\r\n        }\r\n\r\n        function bucarPonentes(e){\r\n            const busqueda = e.target.value\r\n\r\n            if(busqueda.length != 0){\r\n                const expresion = new RegExp(busqueda,\"i\")\r\n                ponentesFiltrados = ponentes.filter(ponente =>{\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1){\r\n                        return ponente\r\n                    }\r\n                })\r\n            }else{\r\n                ponentesFiltrados = []\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes(){\r\n\r\n            while(listadoPonentes.firstChild){\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0){\r\n                ponentesFiltrados.forEach(ponente =>{\r\n                    const ponenteHTML = document.createElement('LI')\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\r\n                    ponenteHTML.textContent = ponente.nombre\r\n                    ponenteHTML.dataset.ponenteId = ponente.id\r\n                    \r\n                    ponenteHTML.onclick = seleccionarPonente\r\n\r\n                    listadoPonentes.appendChild(ponenteHTML)\r\n                })\r\n            }else{\r\n                const noResultados = document.createElement('P')\r\n                noResultados.classList.add('listado-ponentes__no-resultado')\r\n                noResultados.textContent = 'No hay resultados para tu busqueda'\r\n\r\n                listadoPonentes.appendChild(noResultados)\r\n            }\r\n\r\n        }\r\n\r\n        function seleccionarPonente(e){\r\n\r\n            const ponentePrevio = document.querySelector('listado-ponentes__ponente--seleccionado')\r\n            if(ponentePrevio){\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\r\n            }\r\n\r\n            const ponente = e.target\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\r\n            \r\n            ponenteHidden.value = ponente.dataset.ponenteId\r\n        }\r\n    }\r\n})();","(function(){\r\n    const tagsInput = document.querySelector('#tags_input')\r\n\r\n    if(tagsInput){\r\n\r\n        const tagsDiv = document.querySelector('#tags')\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]')\r\n\r\n        let tags = []\r\n\r\n        if(tagsInputHidden.value !== ''){\r\n            tags = tagsInputHidden.value.split(',')\r\n            mostrarTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e){\r\n            if(e.keyCode === 44){\r\n                e.preventDefault();\r\n                if(e.target.value.trim() === '' || e.target.value < 1 || tags.includes(e.target.value)){\r\n                    tagsInput.value=''\r\n                    return \r\n                }\r\n\r\n                tags = [...tags, e.target.value.trim()]\r\n                tagsInput.value=''\r\n                \r\n                mostrarTags()\r\n            }\r\n        }\r\n\r\n        function mostrarTags(){\r\n            tagsDiv.textContent = ''\r\n            tags.forEach(tag=>{\r\n                const etiqueta = document.createElement('li')\r\n                etiqueta.classList.add('formulario__tag')\r\n                etiqueta.textContent = tag\r\n                etiqueta.onclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta) \r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e){\r\n            e.target.remove()\r\n            tags = tags.filter(tag=> tag != e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden(){\r\n\r\n            tagsInputHidden.value=tags.toString()\r\n        }\r\n    }\r\n})()"]}